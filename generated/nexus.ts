/**
 * This file was automatically generated by Nexus 0.11.2
 * Do not make changes to this file directly
 */




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  RocketCreateInput: { // input type
    cost: number; // Int!
    country: string; // String!
    kgGto?: number | null; // Int
    kgLeo?: number | null; // Int
    name: string; // String!
    payloadGto?: number | null; // Int
    payloadLeo?: number | null; // Int
  }
  RocketUpdateInput: { // input type
    cost?: number | null; // Int
    country?: string | null; // String
    kgGto?: number | null; // Int
    kgLeo?: number | null; // Int
    name?: string | null; // String
    payloadGto?: number | null; // Int
    payloadLeo?: number | null; // Int
  }
  RocketWhereInput: { // input type
    AND?: NexusGenInputs['RocketWhereInput'][] | null; // [RocketWhereInput!]
    cost?: number | null; // Int
    cost_gt?: number | null; // Int
    cost_gte?: number | null; // Int
    cost_in?: number[] | null; // [Int!]
    cost_lt?: number | null; // Int
    cost_lte?: number | null; // Int
    cost_not?: number | null; // Int
    cost_not_in?: number[] | null; // [Int!]
    country?: string | null; // String
    country_contains?: string | null; // String
    country_ends_with?: string | null; // String
    country_gt?: string | null; // String
    country_gte?: string | null; // String
    country_in?: string[] | null; // [String!]
    country_lt?: string | null; // String
    country_lte?: string | null; // String
    country_not?: string | null; // String
    country_not_contains?: string | null; // String
    country_not_ends_with?: string | null; // String
    country_not_in?: string[] | null; // [String!]
    country_not_starts_with?: string | null; // String
    country_starts_with?: string | null; // String
    id?: string | null; // ID
    id_contains?: string | null; // ID
    id_ends_with?: string | null; // ID
    id_gt?: string | null; // ID
    id_gte?: string | null; // ID
    id_in?: string[] | null; // [ID!]
    id_lt?: string | null; // ID
    id_lte?: string | null; // ID
    id_not?: string | null; // ID
    id_not_contains?: string | null; // ID
    id_not_ends_with?: string | null; // ID
    id_not_in?: string[] | null; // [ID!]
    id_not_starts_with?: string | null; // ID
    id_starts_with?: string | null; // ID
    kgGto?: number | null; // Int
    kgGto_gt?: number | null; // Int
    kgGto_gte?: number | null; // Int
    kgGto_in?: number[] | null; // [Int!]
    kgGto_lt?: number | null; // Int
    kgGto_lte?: number | null; // Int
    kgGto_not?: number | null; // Int
    kgGto_not_in?: number[] | null; // [Int!]
    kgLeo?: number | null; // Int
    kgLeo_gt?: number | null; // Int
    kgLeo_gte?: number | null; // Int
    kgLeo_in?: number[] | null; // [Int!]
    kgLeo_lt?: number | null; // Int
    kgLeo_lte?: number | null; // Int
    kgLeo_not?: number | null; // Int
    kgLeo_not_in?: number[] | null; // [Int!]
    name?: string | null; // String
    name_contains?: string | null; // String
    name_ends_with?: string | null; // String
    name_gt?: string | null; // String
    name_gte?: string | null; // String
    name_in?: string[] | null; // [String!]
    name_lt?: string | null; // String
    name_lte?: string | null; // String
    name_not?: string | null; // String
    name_not_contains?: string | null; // String
    name_not_ends_with?: string | null; // String
    name_not_in?: string[] | null; // [String!]
    name_not_starts_with?: string | null; // String
    name_starts_with?: string | null; // String
    NOT?: NexusGenInputs['RocketWhereInput'][] | null; // [RocketWhereInput!]
    OR?: NexusGenInputs['RocketWhereInput'][] | null; // [RocketWhereInput!]
    payloadGto?: number | null; // Int
    payloadGto_gt?: number | null; // Int
    payloadGto_gte?: number | null; // Int
    payloadGto_in?: number[] | null; // [Int!]
    payloadGto_lt?: number | null; // Int
    payloadGto_lte?: number | null; // Int
    payloadGto_not?: number | null; // Int
    payloadGto_not_in?: number[] | null; // [Int!]
    payloadLeo?: number | null; // Int
    payloadLeo_gt?: number | null; // Int
    payloadLeo_gte?: number | null; // Int
    payloadLeo_in?: number[] | null; // [Int!]
    payloadLeo_lt?: number | null; // Int
    payloadLeo_lte?: number | null; // Int
    payloadLeo_not?: number | null; // Int
    payloadLeo_not_in?: number[] | null; // [Int!]
  }
  RocketWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
}

export interface NexusGenEnums {
  RocketOrderByInput: "cost_ASC" | "cost_DESC" | "country_ASC" | "country_DESC" | "createdAt_ASC" | "createdAt_DESC" | "id_ASC" | "id_DESC" | "kgGto_ASC" | "kgGto_DESC" | "kgLeo_ASC" | "kgLeo_DESC" | "name_ASC" | "name_DESC" | "payloadGto_ASC" | "payloadGto_DESC" | "payloadLeo_ASC" | "payloadLeo_DESC" | "updatedAt_ASC" | "updatedAt_DESC"
}

export interface NexusGenRootTypes {
  AggregateRocket: { // root type
    count: number; // Int!
  }
  Mutation: {};
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor?: string | null; // String
  }
  Query: {};
  Rocket: { // root type
    cost: number; // Int!
    country: string; // String!
    id: string; // ID!
    kgGto?: number | null; // Int
    kgLeo?: number | null; // Int
    name: string; // String!
    payloadGto?: number | null; // Int
    payloadLeo?: number | null; // Int
  }
  RocketConnection: { // root type
    edges: NexusGenRootTypes['RocketEdge'][]; // [RocketEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  RocketEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['Rocket']; // Rocket!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  RocketCreateInput: NexusGenInputs['RocketCreateInput'];
  RocketUpdateInput: NexusGenInputs['RocketUpdateInput'];
  RocketWhereInput: NexusGenInputs['RocketWhereInput'];
  RocketWhereUniqueInput: NexusGenInputs['RocketWhereUniqueInput'];
  RocketOrderByInput: NexusGenEnums['RocketOrderByInput'];
}

export interface NexusGenFieldTypes {
  AggregateRocket: { // field return type
    count: number; // Int!
  }
  Mutation: { // field return type
    createRocket: NexusGenRootTypes['Rocket']; // Rocket!
    deleteRocket: NexusGenRootTypes['Rocket'] | null; // Rocket
    updateRocket: NexusGenRootTypes['Rocket'] | null; // Rocket
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor: string | null; // String
  }
  Query: { // field return type
    rocket: NexusGenRootTypes['Rocket'] | null; // Rocket
    rockets: NexusGenRootTypes['Rocket'][]; // [Rocket!]!
    rocketsConnection: NexusGenRootTypes['RocketConnection']; // RocketConnection!
  }
  Rocket: { // field return type
    cost: number; // Int!
    country: string; // String!
    id: string; // ID!
    kgGto: number | null; // Int
    kgLeo: number | null; // Int
    name: string; // String!
    payloadGto: number | null; // Int
    payloadLeo: number | null; // Int
  }
  RocketConnection: { // field return type
    aggregate: NexusGenRootTypes['AggregateRocket']; // AggregateRocket!
    edges: NexusGenRootTypes['RocketEdge'][]; // [RocketEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  RocketEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Rocket']; // Rocket!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createRocket: { // args
      data: NexusGenInputs['RocketCreateInput']; // RocketCreateInput!
    }
    deleteRocket: { // args
      where: NexusGenInputs['RocketWhereUniqueInput']; // RocketWhereUniqueInput!
    }
    updateRocket: { // args
      data: NexusGenInputs['RocketUpdateInput']; // RocketUpdateInput!
      where: NexusGenInputs['RocketWhereUniqueInput']; // RocketWhereUniqueInput!
    }
  }
  Query: {
    rocket: { // args
      where: NexusGenInputs['RocketWhereUniqueInput']; // RocketWhereUniqueInput!
    }
    rockets: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenEnums['RocketOrderByInput'] | null; // RocketOrderByInput
      skip?: number | null; // Int
      where?: NexusGenInputs['RocketWhereInput'] | null; // RocketWhereInput
    }
    rocketsConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenEnums['RocketOrderByInput'] | null; // RocketOrderByInput
      skip?: number | null; // Int
      where?: NexusGenInputs['RocketWhereInput'] | null; // RocketWhereInput
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AggregateRocket" | "Mutation" | "PageInfo" | "Query" | "Rocket" | "RocketConnection" | "RocketEdge";

export type NexusGenInputNames = "RocketCreateInput" | "RocketUpdateInput" | "RocketWhereInput" | "RocketWhereUniqueInput";

export type NexusGenEnumNames = "RocketOrderByInput";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}